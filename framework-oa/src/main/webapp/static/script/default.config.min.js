//在页面加载完毕后设置jquery及其插件属性
(function($) {
	
	// jq ajax配置
	$.ajaxSetup({
		//ajax session过期时触发
		complete: function(xhr, textStatus) {
			if(xhr.getResponseHeader("sessionstatus")=="timeout"){  
		        if(xhr.getResponseHeader("loginPath")){  
		            window.location.replace(xhr.getResponseHeader("loginPath"));  
		        }else{  
		        	bootbox.alert("会话过期，请重新登录");  
		        }  
		    }
		},
		//ajax错误处理
		error: function (XMLHttpRequest, textStatus, errorThrown) {
			if(XMLHttpRequest.responseText && XMLHttpRequest.responseText != ""){
				bootbox.alert(XMLHttpRequest.responseText);
				return false;
			}
		}
	});
	
	// 校验插件配置
	$.validator.setDefaults({
		showErrors : function(errorMap, errorList) {
			$.each(this.successList,function(i,e){
				var element = $(e);
				element.parent("div").removeClass("has-error");
				element.tooltip("destroy");
			});
			
			$.each(errorList, function(i, e) {
				var element = $(e.element);
				var tip = element.data('bs.tooltip');
				if ($.isNotEmpty(tip)) {
					tip.options.title = e.message;
					element.next().children(".tooltip-inner").html(e.message);
				} else {
					element.parent("div").addClass("has-error");
					element.tooltip({
						title:e.message,
						trigger:"focus"
					});
				}
			});
		}
	});
	
	// 对话框插件配置
	bootbox.setDefaults({
		locale: "zh_CN"
	});
	
})(jQuery);

// 页面加载完毕后执行初始化
$(document).ready(function(){
	
	var userAgent = function() {
    	ua = navigator.userAgent.toLowerCase();

    	var match = /(msie) ([\w.]+)/.exec( ua );

    	return {
    		name: $.isEmpty(match) ? "" : match[ 1 ] || "",
    		version: $.isEmpty(match) ? "" : match[ 2 ] || "0"
    	};
    },
    browser = userAgent();
    
    
    if (browser.name ==="msie" && browser.version < 9) {
    	$(".main-container").html(
	    	'<div class="server-error">' +
	    		'<p><center><img src="static/image/ie.png"></center></p>' +
	    		'<p>&nbsp;</p>' +
	    		'<h3>浏览器不兼容</h3>' +
	    		'<hr>' +
	    		'<p>您的浏览器版本过低，<a href="http://windows.microsoft.com/zh-cn/internet-explorer/download-ie">请升级IE到最新版本</a></p>' +
	    	'</div>'
    	);
    } else {
		initComponent();
    }
});

// 初始化页面控件样式及行为
function initComponent(){
	
	// 表单校验、提交、reset
	$("form[valid!='false']").each(function(i,o){
		var temp = $(o);
		
		temp.find(":input:not(:disabled):not(:hidden)").first().focus();
		
		if ($.value(temp.attr("data-ajax-submit"),"false").booleanValue()) {
			// ajax提交
			temp.validate({
				submitHandler : function(form) {
					temp.ajaxSubmit();
				},
				ignore: ":hidden:not(.selectpicker)"
			});
		} else {
			// 普通提交
			temp.validate({
				submitHandler: function(form){
					loading('正在提交，请稍等...');
					form.submit();
				},
				ignore: ":hidden:not(.selectpicker)"
			});
		}
		
		temp.find("button[type='reset']").click(function(){
			
			temp.find("input:not(:disabled):not(:hidden)").each(function(i,field){
				$(field).val("");
			});
			
			temp.find("select:not(:disabled):not(:hidden)").each(function(i,field){
				$(field).val("");
			});
			
			temp.find("textarea:not(:disabled):not(:hidden)").each(function(i,field){
				$(field).val("");
			});
			
			return false;
		});
	});
	
	//日期插件
	$(".form_date").datetimepicker({
		language : 'zh-CN',
		format : "yyyy-mm-dd",
		autoclose : true,
		todayBtn : true,
		minView : 2,
		pickerPosition : "bottom-left"
	});
	
	//下拉框
	$('.selectpicker').selectpicker();
	
	//全选
	if($("#selectAll")){
		$("#selectAll").click(function() {
			var checkbox = $(this), children = checkbox.parents("table").find("tbody input[type='checkbox']");
			children.prop("checked", checkbox.is(":checked"));
		});
	}
	//批量删除弹出框提示
	if($("#user-view-form") && $("#selectAll")){
		$("#user-view-form").submit(function(e) {
			var currentForm = this;
			e.preventDefault();
			if($(this).find("input:checked").length > 0){
				bootbox.confirm("确定要删除吗？", function(result) {
		            if (result) currentForm.submit();
		        });
			}
	    });
	}
	
	//表格行点击高亮（排除checkbox）
	$("[clickable='true']").each(function(i,o){
		$(o).css('cursor', 'pointer');
		$(o).on('click', 'tr', function(event) {
			if(event.target.type != 'checkbox'){
				$(this).addClass('highlight').siblings().removeClass('highlight');
			}
		});
	});
	
	// 边栏隐藏
    $('.hide-sidebar').click(function() {
	  $('#sidebar').hide('fast', function() {
	  	$('#mainContent').removeClass('col-md-10');
	  	$('#mainContent').addClass('col-md-12');
	  	$('.hide-sidebar').hide();
	  	$('.show-sidebar').show();
	  });
	});

    // 边栏显示
	$('.show-sidebar').click(function() {
		$('#mainContent').removeClass('col-md-12');
	   	$('#mainContent').addClass('col-md-10');
	   	$('.show-sidebar').hide();
	   	$('.hide-sidebar').show();
	  	$('#sidebar').show('fast');
	});
	
	// 边栏点击
	$("#sidebarMenu .panel-heading a").click(function(){
		$("#sidebarMenu .panel-heading a").children('span').removeClass('glyphicon-chevron-down');
		$("#sidebarMenu .panel-heading a").children('span').addClass('glyphicon-chevron-right');
		if(!$($(this).attr('href')).hasClass('in')){
			$(this).children('span').removeClass('glyphicon-chevron-right');
			$(this).children('span').addClass('glyphicon-chevron-down');
		}
	});
	$("#sidebarMenu .panel-body a").click(function(){
		$("#sidebarMenu .panel-body a").removeClass("active");
		$(this).addClass("active");
		localStorage.menuId = $(this).attr("id");
	});
	
	// 保持边栏状态
	if(localStorage.menuId){
		var pMenuId = $("#" + localStorage.menuId).parent().parent().attr("id");
		$("[href='#" + pMenuId + "']").click();
		$("#" + localStorage.menuId).click();
	}
}

//显示加载框
function loading(mess){
	top.$.jBox.tip.mess = null;
	top.$.jBox.tip(mess,'loading',{opacity:0});
}

//确认对话框
function confirmx(mess, href){
	bootbox.confirm(mess, function(result) {
        if (result) {
			loading('正在提交，请稍等...');
			location = href;
		}
    });
	return false;
}


/**
 * 动态构造分页表格
 * @param ajaxUrl       ajax获取动态tbody的url          
 * @param customSetting 参数数组
 */
function ajaxPagination(ajaxUrl, customSetting) {
	var totalPage;
	// 默认选项
	var setting = { tbodyId: "list-content", paginatorId: "pagination", currentPage: 1  };
	// 合并customSetting到setting
	$.extend(setting, customSetting);
	$.ajax({
		url : ajaxUrl,
		async : false,
		type : "POST",
		data : setting.data?("page=" + setting.currentPage + "&" + setting.data):("page=" + setting.currentPage),
		success : function(resp) {
			if(resp && resp != ""){
				$("#" + setting.tbodyId).html(resp.body);
				if($("#" + setting.paginatorId + "Count")){
					$("#" + setting.paginatorId + "Count").remove();
				}
				if(resp.total != 0){
					$("#" + setting.paginatorId).parent().append(
						"<ul class='pagination' id='" + setting.paginatorId + "Count'>" +
						"<li class='disabled'><a>第" + (resp.currentResult + 1) + " - " + resp.currentEndResult + "条记录 / 共" + resp.total + "条</a></li>" +
						"</ul>" 
					);
				}else{
					$("#" + setting.paginatorId).parent().append(
						"<ul class='pagination' id='" + setting.paginatorId + "Count'>" +
						"<li class='disabled'><a>共" + resp.total + "条</a></li>" +
						"</ul>" 
					);
				}
				totalPage = resp.totalPage;
				// 如果有占位符
				if(resp.body.indexOf("holder.js") != -1){
					Holder.run();
				}
			}
		}
	});
	var options = {
		bootstrapMajorVersion : 3,
		currentPage : setting.currentPage,
		totalPages : totalPage,
		tooltipTitles : function(type, page, current) {
			switch (type) {
			case "first":
				return "首页";
			case "prev":
				return "上一页";
			case "next":
				return "下一页";
			case "last":
				return "末页";
			case "page":
				return "";
			}
		},
		pageUrl : function(type, page, current) {
			return "#";
		},
		onPageClicked : function(e, originalEvent, type, page) {
			e.stopImmediatePropagation();

			var currentTarget = $(e.currentTarget);

			if (page) {
				$.ajax({
					url : ajaxUrl,
					type : "POST",
					data : setting.data?("page=" + page + "&" + setting.data):("page=" + page),
					success : function(resp) {
						if(resp && resp != ""){
							$("#" + setting.tbodyId).html(resp.body);
							if($("#" + setting.paginatorId + "Count")){
								$("#" + setting.paginatorId + "Count").remove();
							}
							$("#" + setting.paginatorId).parent().append(
								"<ul class='pagination' id='" + setting.paginatorId + "Count'>" +
								"<li class='disabled'><a>第" + (resp.currentResult + 1) + " - " + resp.currentEndResult + "条记录 / 共" + resp.total + "条</a></li>" +
								"</ul>" 
							);
							currentTarget.bootstrapPaginator("show", page);
							// 如果有占位符
							if(resp.body.indexOf("holder.js") != -1){
								Holder.run();
							}
						}
					}
				});
			}

		}
	};

	if (totalPage > 1) {
		$('#' + setting.paginatorId).show();
		$('#' + setting.paginatorId).bootstrapPaginator(options);
	}else {
		$('#' + setting.paginatorId).hide();
	}
	
};

/**
 * 
 * @param frm
 *            要填充数据的表单
 * @param ajaxUrl
 *            获取实体数据的url
 * @param actUrl
 *            表单要更新的action属性（可选）
 * 
 */
function populateForm(frm, ajaxUrl, actUrl) {
	$.ajax({
		url : ajaxUrl,
		success : function(resp) {
			frm.populate(resp);
			$('.fileupload', frm).removeClass("fileupload-new");
			$('.fileupload', frm).addClass("fileupload-exists");
			if (actUrl) {
				frm.attr("action", actUrl);
			}
		}
	});
}

/**
 * 将form置为disabled状态
 * 
 * @param frm
 */
function viewForm(frm) {
	frm.find("input:not(:disabled):not(:hidden)").each(function(i, field) {
		$(field).attr("disabled", "disabled");
	});

	frm.find("select:not(:disabled):not(:hidden)").each(function(i, field) {
		$(field).attr("disabled", "disabled");
	});

	frm.find("textarea:not(:disabled):not(:hidden)").each(function(i, field) {
		$(field).attr("disabled", "disabled");
	});
}

/**
 * 将form置为create状态
 * 
 * @param frm
 * @param action
 */
function createForm(frm, action) {
	frm.find("input").each(function(i, field) {
		$(field).removeAttr("disabled");
		$(field).val('');
	});

	frm.find("select").each(function(i, field) {
		$(field).removeAttr("disabled");
		$(field).val('');
	});

	frm.find("textarea").each(function(i, field) {
		$(field).removeAttr("disabled");
		$(field).val('');
	});
	frm.attr("action", action);
	rotateForm(frm);
}

/**
 * 将form置为update状态
 * 
 * @param frm
 * @param action
 */
function updateForm(frm, action) {
	frm.find("input").each(function(i, field) {
		$(field).removeAttr("disabled");
	});

	frm.find("select").each(function(i, field) {
		$(field).removeAttr("disabled");
	});

	frm.find("textarea").each(function(i, field) {
		$(field).removeAttr("disabled");
	});
	frm.attr("action", action);
	rotateForm(frm);
}

/**
 * 转到viewForm
 * @param ajaxUrl 
 */
function viewFormNew(ajaxUrl) {
	if($('#inputForm').is(':visible') || $('#updateForm').is(':visible')){
		var isRotate = true;
	}
	$('#viewForm').show();
	$("#viewfooter").show();
	$('#inputForm').hide();
	$('#updateForm').hide();
	$("#createfooter").hide();
	if(isRotate) rotateForm($('#viewForm'));
	if(ajaxUrl){
		$.get(ajaxUrl, function(resp){
			$('#viewForm').populate(resp);
		});
	}
}

/**
 * 返回viewForm
 */
function returnToViewForm(){
	$("#viewForm").show();
	$("#viewfooter").show();
	$('#inputForm').hide();
	$('#updateForm').hide();
	$("#createfooter").hide();
	rotateForm($('#viewForm'));
}

/**
 * 转到inputform
 */
function createFormNew(act, ajaxUrl) {
	$('#inputForm').show();
	$("#createfooter").show();
	$('#updateForm').hide();
	$('#viewForm').hide();
	$("#viewfooter").hide();
	//如果有act则设为action
	if(act){
		$('#inputForm').attr("action", act);
	}
	//清空并去除error样式
	$('#inputForm').find("input").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});

	$('#inputForm').find("select").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});

	$('#inputForm').find("textarea").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});
	rotateForm($('#inputForm'));
	if(ajaxUrl){
		$.get(ajaxUrl, function(resp){
			$('#inputForm').populate(resp);
		});
	}
}

/**
 * 转到updateform
 * @param ajaxUrl
 */
function updateFormNew(ajaxUrl) {
	$('#updateForm').show();
	$("#createfooter").show();
	$('#inputForm').hide();
	$('#viewForm').hide();
	$("#viewfooter").hide();
	//清空并去除error样式
	$('#updateForm').find("input").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});

	$('#updateForm').find("select").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});

	$('#updateForm').find("textarea").each(function(i, field) {
		$(field).val('');
		$(field).parent("div").removeClass("has-error");
		$(field).tooltip("destroy");
	});
	rotateForm($('#updateForm'));
	if(ajaxUrl){
		$.get(ajaxUrl, function(resp){
			$('#updateForm').populate(resp);
		});
	}
}

/**
 * 旋转页面元素
 * @param frm
 */
function rotateForm(frm) {
	var transitionOptions = {
		duration: 800
	};
	if (!frm.data('transitioned')) {
		transitionOptions.rotateY = 360;
		frm.transition(transitionOptions, function() {
			frm.data('transitioned', true);
		});
	} else {
		transitionOptions.rotateY = 0;
		frm.transition(transitionOptions, function() {
			frm.data('transitioned', false);
		});
	}
}

/**
 * 初始化附件，如果有para则获取附件metaInfo
 * @param para
 */
function attachment(para){
	$('.fileinput').removeClass("fileinput-exists").addClass("fileinput-new");
	$('.fileinput-preview').html("");
	$("[name='metaInfo']").val("");
	if(para){
		$.get(para.context + "/attachment/query/" + para.serviceType + "/" + para.serviceId, function(resp){
			if (resp.path && resp.path != ""){
				$('.fileinput').removeClass("fileinput-new").addClass("fileinput-exists");
				$('.fileinput-preview').html("<img src='" + para.context + "/" + resp.path + "'>");
			}
			if (resp.metaInfo && resp.metaInfo != ""){
				$("[name='metaInfo']").val(resp.metaInfo);
			}
		});
	}
}